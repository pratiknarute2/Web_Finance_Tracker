{
  "config": {
    "configFile": "/Users/pratiknarute/Automation/Expense_Tracker_Project/Web_Finance_Tracker/playwright.config.js",
    "rootDir": "/Users/pratiknarute/Automation/Expense_Tracker_Project/Web_Finance_Tracker",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 2
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "list",
        null
      ],
      [
        "html",
        {
          "outputFolder": "playwright-reports/html-report",
          "open": "on-failure"
        }
      ],
      [
        "json",
        {
          "outputFile": "playwright-reports/report.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "playwright-reports/report.xml"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/pratiknarute/Automation/Expense_Tracker_Project/Web_Finance_Tracker/test-results",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 2
        },
        "id": "",
        "name": "",
        "testDir": "/Users/pratiknarute/Automation/Expense_Tracker_Project/Web_Finance_Tracker",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 120000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.52.0",
    "workers": 2,
    "webServer": null
  },
  "suites": [
    {
      "title": "Tests/FinanceTracker.test.js",
      "file": "Tests/FinanceTracker.test.js",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "üåê API Testing Suite",
          "file": "Tests/FinanceTracker.test.js",
          "line": 13,
          "column": 15,
          "specs": [],
          "suites": [
            {
              "title": "üîê Authentication",
              "file": "Tests/FinanceTracker.test.js",
              "line": 16,
              "column": 10,
              "specs": [
                {
                  "title": "POST | Login API",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 123,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\nüîπ Executing Login API...\n"
                            },
                            {
                              "text": "üîÑ Verifying: Post Login API...\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"email\": \"pratiknarute2@gmail.com\",\n  \"password\": \"Pratik@1234\"\n}\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 107 ms\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.20 KB\n"
                            },
                            {
                              "text": "üßæ JSON Response: {\n  message: \u001b[32m'Logged in successfully'\u001b[39m,\n  token: \u001b[32m'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwcmF0aWtuYXJ1dGUyQGdtYWlsLmNvbSIsImlhdCI6MTc2MDIxNDA4MywiZXhwIjoxNzYyODA2MDgzfQ.bTTZbAxk3tvMe5rM1sSNad9f1Q25OKZ0UUhnh6hLlE0'\u001b[39m\n}\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "üîë Global token set: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwcmF0aWtuYXJ1dGUyQGdtYWlsLmNvbSIsImlhdCI6MTc2MDIxNDA4MywiZXhwIjoxNzYyODA2MDgzfQ.bTTZbAxk3tvMe5rM1sSNad9f1Q25OKZ0UUhnh6hLlE0\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:23.533Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-c772bfff537c36bf0dae",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 18,
                  "column": 9
                }
              ]
            },
            {
              "title": "üè∑Ô∏è Label Feature",
              "file": "Tests/FinanceTracker.test.js",
              "line": 28,
              "column": 10,
              "specs": [
                {
                  "title": "GET | Fetch Label API",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 34,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Get Labels API...\n"
                            },
                            {
                              "text": "üåê Sending GET request to: http://localhost:8080/api/labels\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 33 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.26 KB\n"
                            },
                            {
                              "text": "üßæ GET Response: [\n  {\n    id: \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m,\n    name: \u001b[32m'Essentials'\u001b[39m,\n    color: \u001b[32m'#4CAF50'\u001b[39m,\n    default: \u001b[33mfalse\u001b[39m\n  },\n  {\n    id: \u001b[32m'68bc24faf115e8a75b9bc4f8'\u001b[39m,\n    name: \u001b[32m'Hygenic'\u001b[39m,\n    color: \u001b[32m'#2196F3'\u001b[39m,\n    default: \u001b[33mfalse\u001b[39m\n  },\n  {\n    id: \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m,\n    name: \u001b[32m'Unessentials'\u001b[39m,\n    color: \u001b[32m'#F44336'\u001b[39m,\n    default: \u001b[33mfalse\u001b[39m\n  }\n]\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:23.662Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-72e0cf477d55acf452e0",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 30,
                  "column": 9
                },
                {
                  "title": "GET | Fetch Label Usage API",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 68,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Get Label Usage API...\n"
                            },
                            {
                              "text": "üåê Sending GET request to: http://localhost:8080/api/labels/usage\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 67 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.13 KB\n"
                            },
                            {
                              "text": "üßæ GET Response: [\n  { id: \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m, count: \u001b[33m138\u001b[39m },\n  { id: \u001b[32m'68bc24faf115e8a75b9bc4f8'\u001b[39m, count: \u001b[33m5\u001b[39m },\n  { id: \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m, count: \u001b[33m32\u001b[39m }\n]\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:23.697Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-bac9aeb09ef454ca6b5a",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 35,
                  "column": 9
                }
              ]
            },
            {
              "title": "üíµ Opening Balance Feature",
              "file": "Tests/FinanceTracker.test.js",
              "line": 42,
              "column": 10,
              "specs": [
                {
                  "title": "GET | Opening Balance API",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 33,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Get Opening Balance API...\n"
                            },
                            {
                              "text": "üåê Sending GET request to: http://localhost:8080/api/transactions/opening-balance\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 30 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.01 KB\n"
                            },
                            {
                              "text": "üßæ GET Response: \u001b[33m50000\u001b[39m\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:23.766Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-c254c5722d7703b11b04",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 44,
                  "column": 9
                }
              ]
            },
            {
              "title": "üí∞ Category Feature",
              "file": "Tests/FinanceTracker.test.js",
              "line": 51,
              "column": 10,
              "specs": [
                {
                  "title": "POST | Create Debit Category",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 58,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Post Categories API for debit...\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"name\": \"Testing\",\n  \"type\": \"debit\"\n}\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 53 ms\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.06 KB\n"
                            },
                            {
                              "text": "üßæ JSON Response: { id: \u001b[32m'68eabc43054cd6fb2be1cd96'\u001b[39m, name: \u001b[32m'Testing'\u001b[39m, type: \u001b[32m'debit'\u001b[39m }\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "üîë Global category ID set: 68eabc43054cd6fb2be1cd96\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:23.802Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-a0ad17eba5e905f9fa0d",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 53,
                  "column": 9
                },
                {
                  "title": "GET | Fetch Categories",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 42,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Get Categories API...\n"
                            },
                            {
                              "text": "üåê Sending GET request to: http://localhost:8080/api/categories\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 38 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 1.61 KB\n"
                            },
                            {
                              "text": "üßæ GET Response: [\n  {\n    id: \u001b[32m'68bc201e1c428f12149f53cd'\u001b[39m,\n    name: \u001b[32m'Gift/Donation'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m\n  },\n  { id: \u001b[32m'68bdb261f115e8a75b9bc502'\u001b[39m, name: \u001b[32m'Health'\u001b[39m, type: \u001b[32m'credit'\u001b[39m },\n  {\n    id: \u001b[32m'68bc201e1c428f12149f53cc'\u001b[39m,\n    name: \u001b[32m'Investment'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m\n  },\n  { id: \u001b[32m'68c1c7bfa603b14c06a1f835'\u001b[39m, name: \u001b[32m'Loan'\u001b[39m, type: \u001b[32m'credit'\u001b[39m },\n  {\n    id: \u001b[32m'68bde13cf115e8a75b9bc51f'\u001b[39m,\n    name: \u001b[32m'Opening Balance'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m\n  },\n  { id: \u001b[32m'68bc201e1c428f12149f53cb'\u001b[39m, name: \u001b[32m'Refund'\u001b[39m, type: \u001b[32m'credit'\u001b[39m },\n  { id: \u001b[32m'68bc201e1c428f12149f53ca'\u001b[39m, name: \u001b[32m'Salary'\u001b[39m, type: \u001b[32m'credit'\u001b[39m },\n  {\n    id: \u001b[32m'68d981bd97884c8960efbfd0'\u001b[39m,\n    name: \u001b[32m'Bank Charges'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m\n  },\n  { id: \u001b[32m'68bc201d1c428f12149f53c8'\u001b[39m, name: \u001b[32m'EMI'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  {\n    id: \u001b[32m'68bc201b1c428f12149f53c1'\u001b[39m,\n    name: \u001b[32m'Entertainment'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m\n  },\n  {\n    id: \u001b[32m'68bc201b1c428f12149f53c3'\u001b[39m,\n    name: \u001b[32m'Family support'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m\n  },\n  {\n    id: \u001b[32m'68bdb429f115e8a75b9bc504'\u001b[39m,\n    name: \u001b[32m'Fashion & Lifestyle'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m\n  },\n  { id: \u001b[32m'68bc201a1c428f12149f53be'\u001b[39m, name: \u001b[32m'Food'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  {\n    id: \u001b[32m'68bdb2e4f115e8a75b9bc503'\u001b[39m,\n    name: \u001b[32m'Gift/Donation'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m\n  },\n  { id: \u001b[32m'68bc201c1c428f12149f53c5'\u001b[39m, name: \u001b[32m'Grocery'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  { id: \u001b[32m'68bdb257f115e8a75b9bc501'\u001b[39m, name: \u001b[32m'Health'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  { id: \u001b[32m'68bddf3cf115e8a75b9bc51b'\u001b[39m, name: \u001b[32m'Investment'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  { id: \u001b[32m'68bc201b1c428f12149f53c2'\u001b[39m, name: \u001b[32m'Lending'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  { id: \u001b[32m'68bc201d1c428f12149f53c9'\u001b[39m, name: \u001b[32m'Others'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  {\n    id: \u001b[32m'68d573b6a603b14c06a1f876'\u001b[39m,\n    name: \u001b[32m'Printing & Stationery'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m\n  },\n  { id: \u001b[32m'68bc201c1c428f12149f53c6'\u001b[39m, name: \u001b[32m'Rent'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  { id: \u001b[32m'68eabc43054cd6fb2be1cd96'\u001b[39m, name: \u001b[32m'Testing'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  { id: \u001b[32m'68bc201b1c428f12149f53bf'\u001b[39m, name: \u001b[32m'Transport'\u001b[39m, type: \u001b[32m'debit'\u001b[39m },\n  { id: \u001b[32m'68bc201d1c428f12149f53c7'\u001b[39m, name: \u001b[32m'Utilities'\u001b[39m, type: \u001b[32m'debit'\u001b[39m }\n]\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:23.862Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-42e88c67d92647759ca0",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 58,
                  "column": 9
                },
                {
                  "title": "PUT | Update Debit Category",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 75,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Update Categories API for debit...\n"
                            },
                            {
                              "text": "üõ†Ô∏è Sending PUT request to: http://localhost:8080/api/categories/68eabc43054cd6fb2be1cd96\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"newName\": \"Testing updated\"\n}\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 71 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.07 KB\n"
                            },
                            {
                              "text": "üßæ PUT Response: {\n  id: \u001b[32m'68eabc43054cd6fb2be1cd96'\u001b[39m,\n  name: \u001b[32m'Testing updated'\u001b[39m,\n  type: \u001b[32m'debit'\u001b[39m\n}\n"
                            },
                            {
                              "text": "‚úÖ PUT request updated successfully! Updated name: Testing updated\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "‚úÖ Updated category ID: 68eabc43054cd6fb2be1cd96 with type: debit\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:23.906Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-610d94dd4df89bed2a88",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 63,
                  "column": 9
                },
                {
                  "title": "DELETE | Delete Debit Category",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 52,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Delete Categories API for debit...\n"
                            },
                            {
                              "text": "üóëÔ∏è Sending DELETE request to: http://localhost:8080/api/categories/68eabc43054cd6fb2be1cd96\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m204\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 46 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.00 KB\n"
                            },
                            {
                              "text": "üßæ DELETE Response: <empty>\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "‚úÖ Deleted category ID: 68eabc43054cd6fb2be1cd96 for type: debit\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:23.983Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-829c1b00ec0d50c667da",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 68,
                  "column": 9
                },
                {
                  "title": "POST | Create Credit Category",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 35,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Post Categories API for credit...\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"name\": \"Testing\",\n  \"type\": \"credit\"\n}\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 31 ms\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.06 KB\n"
                            },
                            {
                              "text": "üßæ JSON Response: { id: \u001b[32m'68eabc44054cd6fb2be1cd97'\u001b[39m, name: \u001b[32m'Testing'\u001b[39m, type: \u001b[32m'credit'\u001b[39m }\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "üîë Global category ID set: 68eabc44054cd6fb2be1cd97\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.037Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-d3819095bfbadfc5ad74",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 73,
                  "column": 9
                },
                {
                  "title": "PUT | Update Credit Category",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 66,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Update Categories API for credit...\n"
                            },
                            {
                              "text": "üõ†Ô∏è Sending PUT request to: http://localhost:8080/api/categories/68eabc44054cd6fb2be1cd97\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"newName\": \"Testing updated\"\n}\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 65 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.07 KB\n"
                            },
                            {
                              "text": "üßæ PUT Response: {\n  id: \u001b[32m'68eabc44054cd6fb2be1cd97'\u001b[39m,\n  name: \u001b[32m'Testing updated'\u001b[39m,\n  type: \u001b[32m'credit'\u001b[39m\n}\n"
                            },
                            {
                              "text": "‚úÖ PUT request updated successfully! Updated name: Testing updated\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "‚úÖ Updated category ID: 68eabc44054cd6fb2be1cd97 with type: credit\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.077Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-28339f19f3703c250a4e",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 78,
                  "column": 9
                },
                {
                  "title": "DELETE | Delete Credit Category",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 47,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Delete Categories API for credit...\n"
                            },
                            {
                              "text": "üóëÔ∏è Sending DELETE request to: http://localhost:8080/api/categories/68eabc44054cd6fb2be1cd97\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m204\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 46 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.00 KB\n"
                            },
                            {
                              "text": "üßæ DELETE Response: <empty>\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "‚úÖ Deleted category ID: 68eabc44054cd6fb2be1cd97 for type: credit\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.144Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-21e66549647ff7e97655",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 83,
                  "column": 9
                }
              ]
            },
            {
              "title": "üí≥ Transaction Feature",
              "file": "Tests/FinanceTracker.test.js",
              "line": 90,
              "column": 10,
              "specs": [
                {
                  "title": "POST | Debit Transaction",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 84,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Post Transaction API for debit...\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"date\": \"2025-10-10\",\n  \"type\": \"debit\",\n  \"category\": \"Bank Charges\",\n  \"amount\": \"10\",\n  \"reimbursable\": \"N\",\n  \"comments\": \"Testing\",\n  \"labelIds\": [\n    \"68bc24f7f115e8a75b9bc4f6\"\n  ]\n}\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 81 ms\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.24 KB\n"
                            },
                            {
                              "text": "üßæ JSON Response: {\n  id: \u001b[32m'68eabc44054cd6fb2be1cd98'\u001b[39m,\n  date: \u001b[32m'2025-10-10'\u001b[39m,\n  time: \u001b[32m'01:51:24.261381'\u001b[39m,\n  type: \u001b[32m'debit'\u001b[39m,\n  category: \u001b[32m'Bank Charges'\u001b[39m,\n  amount: \u001b[33m10\u001b[39m,\n  reimbursable: \u001b[33mfalse\u001b[39m,\n  comments: \u001b[32m'Testing'\u001b[39m,\n  runningBalance: \u001b[33m1624510.96\u001b[39m,\n  labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n}\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "üîë Global Transaction ID set: 68eabc44054cd6fb2be1cd98\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.193Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-798773e917f615b38f79",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 92,
                  "column": 9
                },
                {
                  "title": "GET | Fetch Transaction",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 52,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Get Transaction API...\n"
                            },
                            {
                              "text": "üåê Sending GET request to: http://localhost:8080/api/transactions\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 48 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 59.52 KB\n"
                            },
                            {
                              "text": "üßæ GET Response: [\n  {\n    id: \u001b[32m'68eaa170054cd6fb2be1cd7e'\u001b[39m,\n    date: \u001b[32m'2025-10-11'\u001b[39m,\n    time: \u001b[32m'23:56:56.702'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Family support'\u001b[39m,\n    amount: \u001b[33m10\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m''\u001b[39m,\n    runningBalance: \u001b[33m1624510.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68ea9574054cd6fb2be1cd7b'\u001b[39m,\n    date: \u001b[32m'2025-10-11'\u001b[39m,\n    time: \u001b[32m'23:05:48.72'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Bank Charges'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1624520.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68ea8d9c054cd6fb2be1cd7a'\u001b[39m,\n    date: \u001b[32m'2025-10-11'\u001b[39m,\n    time: \u001b[32m'22:32:20.922'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Bank Charges'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1625520.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eabc44054cd6fb2be1cd98'\u001b[39m,\n    date: \u001b[32m'2025-10-10'\u001b[39m,\n    time: \u001b[32m'01:51:24.261'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Bank Charges'\u001b[39m,\n    amount: \u001b[33m10\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Testing'\u001b[39m,\n    runningBalance: \u001b[33m1626520.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e91e12cd22bb963ac910b2'\u001b[39m,\n    date: \u001b[32m'2025-10-10'\u001b[39m,\n    time: \u001b[32m'20:24:10.345'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Bank Charges'\u001b[39m,\n    amount: \u001b[33m10\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Testing'\u001b[39m,\n    runningBalance: \u001b[33m1626530.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e91e03cd22bb963ac910af'\u001b[39m,\n    date: \u001b[32m'2025-10-10'\u001b[39m,\n    time: \u001b[32m'20:23:55.815'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Bank Charges'\u001b[39m,\n    amount: \u001b[33m10\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Testing'\u001b[39m,\n    runningBalance: \u001b[33m1626540.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e89953cce1cb176bb23dc7'\u001b[39m,\n    date: \u001b[32m'2025-10-10'\u001b[39m,\n    time: \u001b[32m'10:57:47.997'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Grocery'\u001b[39m,\n    amount: \u001b[33m166\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Rice, Groundnut, coffee '\u001b[39m,\n    runningBalance: \u001b[33m1626550.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e89923cce1cb176bb23dc6'\u001b[39m,\n    date: \u001b[32m'2025-10-10'\u001b[39m,\n    time: \u001b[32m'10:56:59.261'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Lending'\u001b[39m,\n    amount: \u001b[33m20000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To shabham savne'\u001b[39m,\n    runningBalance: \u001b[33m1626716.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eabc11054cd6fb2be1cd95'\u001b[39m,\n    date: \u001b[32m'2025-10-09'\u001b[39m,\n    time: \u001b[32m'01:50:33.18'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Autoamtion Testing'\u001b[39m,\n    runningBalance: \u001b[33m1646716.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e898f7cce1cb176bb23dc5'\u001b[39m,\n    date: \u001b[32m'2025-10-09'\u001b[39m,\n    time: \u001b[32m'10:56:15.556'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Refund'\u001b[39m,\n    amount: \u001b[33m2500\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'From Dada kolekar '\u001b[39m,\n    runningBalance: \u001b[33m1647716.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e88e72cce1cb176bb23dc4'\u001b[39m,\n    date: \u001b[32m'2025-10-09'\u001b[39m,\n    time: \u001b[32m'10:11:22.243'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m250\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Dinner '\u001b[39m,\n    runningBalance: \u001b[33m1645216.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e7c062a07faf4f116aad12'\u001b[39m,\n    date: \u001b[32m'2025-10-09'\u001b[39m,\n    time: \u001b[32m'19:32:10.677'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m180\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Given refreshment to team'\u001b[39m,\n    runningBalance: \u001b[33m1645466.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e7c03ea07faf4f116aad11'\u001b[39m,\n    date: \u001b[32m'2025-10-09'\u001b[39m,\n    time: \u001b[32m'19:31:34.593'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m65\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch bowl'\u001b[39m,\n    runningBalance: \u001b[33m1645646.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e69fc3a07faf4f116aacf7'\u001b[39m,\n    date: \u001b[32m'2025-10-08'\u001b[39m,\n    time: \u001b[32m'23:00:43.074'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Grocery'\u001b[39m,\n    amount: \u001b[33m50\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Vegetables '\u001b[39m,\n    runningBalance: \u001b[33m1645711.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e682d3a07faf4f116aacf6'\u001b[39m,\n    date: \u001b[32m'2025-10-08'\u001b[39m,\n    time: \u001b[32m'20:57:15.117'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m170\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch '\u001b[39m,\n    runningBalance: \u001b[33m1645761.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e57e9ea07faf4f116aace2'\u001b[39m,\n    date: \u001b[32m'2025-10-07'\u001b[39m,\n    time: \u001b[32m'02:27:02.893'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m65\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch'\u001b[39m,\n    runningBalance: \u001b[33m1645931.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e57e7ca07faf4f116aace1'\u001b[39m,\n    date: \u001b[32m'2025-10-07'\u001b[39m,\n    time: \u001b[32m'02:26:28.599'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m70\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch'\u001b[39m,\n    runningBalance: \u001b[33m1645996.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e3d91da07faf4f116aace0'\u001b[39m,\n    date: \u001b[32m'2025-10-06'\u001b[39m,\n    time: \u001b[32m'20:28:37.342'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m30\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lansi drink '\u001b[39m,\n    runningBalance: \u001b[33m1646066.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e3b3a4a07faf4f116aacdf'\u001b[39m,\n    date: \u001b[32m'2025-10-06'\u001b[39m,\n    time: \u001b[32m'17:48:44.047'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m50\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch '\u001b[39m,\n    runningBalance: \u001b[33m1646096.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e3b2c9a07faf4f116aacde'\u001b[39m,\n    date: \u001b[32m'2025-10-06'\u001b[39m,\n    time: \u001b[32m'17:45:05.913'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Entertainment'\u001b[39m,\n    amount: \u001b[33m4300\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Dnyaneshwar '\u001b[39m,\n    runningBalance: \u001b[33m1646146.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eab2c4054cd6fb2be1cd8d'\u001b[39m,\n    date: \u001b[32m'2025-10-05'\u001b[39m,\n    time: \u001b[32m'01:10:52.385'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m3000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1650446.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e2b513a07faf4f116aacdd'\u001b[39m,\n    date: \u001b[32m'2025-10-05'\u001b[39m,\n    time: \u001b[32m'23:42:35.743'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m70\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Dinner'\u001b[39m,\n    runningBalance: \u001b[33m1647446.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e2b49ba07faf4f116aacdc'\u001b[39m,\n    date: \u001b[32m'2025-10-05'\u001b[39m,\n    time: \u001b[32m'23:40:35.095'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m280\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Pune to Mumbai'\u001b[39m,\n    runningBalance: \u001b[33m1647516.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e24ff0a07faf4f116aacdb'\u001b[39m,\n    date: \u001b[32m'2025-10-05'\u001b[39m,\n    time: \u001b[32m'16:31:04.624'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Utilities'\u001b[39m,\n    amount: \u001b[33m4360\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Electricity Bill for Goregaon room'\u001b[39m,\n    runningBalance: \u001b[33m1647796.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e23d0aa07faf4f116aacda'\u001b[39m,\n    date: \u001b[32m'2025-10-05'\u001b[39m,\n    time: \u001b[32m'15:10:26.034'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m190\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch '\u001b[39m,\n    runningBalance: \u001b[33m1652156.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e23cdda07faf4f116aacd9'\u001b[39m,\n    date: \u001b[32m'2025-10-05'\u001b[39m,\n    time: \u001b[32m'15:09:41.233'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m45\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Breakfast '\u001b[39m,\n    runningBalance: \u001b[33m1652346.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e14ae86f459a2eb96acef9'\u001b[39m,\n    date: \u001b[32m'2025-10-04'\u001b[39m,\n    time: \u001b[32m'21:57:20.409'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m130\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Dinner'\u001b[39m,\n    runningBalance: \u001b[33m1652391.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e1243d6f459a2eb96acef7'\u001b[39m,\n    date: \u001b[32m'2025-10-04'\u001b[39m,\n    time: \u001b[32m'19:12:21.709'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Salary'\u001b[39m,\n    amount: \u001b[33m122292\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Salary for SEP 2025 month from Ampcus '\u001b[39m,\n    runningBalance: \u001b[33m1652521.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dff7c26f459a2eb96acef6'\u001b[39m,\n    date: \u001b[32m'2025-10-03'\u001b[39m,\n    time: \u001b[32m'21:50:18.852'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m275\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Dinner'\u001b[39m,\n    runningBalance: \u001b[33m1530229.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68df88a16f459a2eb96acef5'\u001b[39m,\n    date: \u001b[32m'2025-10-03'\u001b[39m,\n    time: \u001b[32m'13:56:09.314'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m90\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Breakfast '\u001b[39m,\n    runningBalance: \u001b[33m1530504.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68df88866f459a2eb96acef4'\u001b[39m,\n    date: \u001b[32m'2025-10-03'\u001b[39m,\n    time: \u001b[32m'13:55:42.651'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m1305\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Petrol in my bike (11.75 ltr)'\u001b[39m,\n    runningBalance: \u001b[33m1530594.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68df88216f459a2eb96acef3'\u001b[39m,\n    date: \u001b[32m'2025-10-03'\u001b[39m,\n    time: \u001b[32m'13:54:01.917'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Utilities'\u001b[39m,\n    amount: \u001b[33m22\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Recharge of laxmi mobile 1 day top up'\u001b[39m,\n    runningBalance: \u001b[33m1531899.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eabbaa054cd6fb2be1cd94'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'01:48:50.404'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1531921.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eabb6d054cd6fb2be1cd93'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'01:47:49.095'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1532021.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eabacb054cd6fb2be1cd92'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'01:45:07.383'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1532121.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaba4f054cd6fb2be1cd91'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'01:43:03.323'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1532221.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eab9b3054cd6fb2be1cd90'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'01:40:27.435'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1532321.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eab4f5054cd6fb2be1cd8f'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'01:20:13.607'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m1532421.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68e124ae6f459a2eb96acef8'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'19:14:14.307'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Bank Charges'\u001b[39m,\n    amount: \u001b[33m10\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Trial with IMPS payment option'\u001b[39m,\n    runningBalance: \u001b[33m1532521.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dec4ad6f459a2eb96acef2'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'00:00:05.055'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Rent'\u001b[39m,\n    amount: \u001b[33m13000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Rent for Goregaon room Oct 2025'\u001b[39m,\n    runningBalance: \u001b[33m1532531.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dec4176f459a2eb96acef1'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'23:57:35.985'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m350\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch '\u001b[39m,\n    runningBalance: \u001b[33m1545531.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dec3fd6f459a2eb96acef0'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'23:57:09.685'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Investment'\u001b[39m,\n    amount: \u001b[33m200000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Dnyaneshwar covert into cash given to Ajit Dhumal '\u001b[39m,\n    runningBalance: \u001b[33m1545881.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dec37d6f459a2eb96aceef'\u001b[39m,\n    date: \u001b[32m'2025-10-02'\u001b[39m,\n    time: \u001b[32m'23:55:01.109'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Investment'\u001b[39m,\n    amount: \u001b[33m399000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Dnyaneshwar covert into cash given to Ajit Dhumal '\u001b[39m,\n    runningBalance: \u001b[33m1745881.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eab45c054cd6fb2be1cd8e'\u001b[39m,\n    date: \u001b[32m'2025-10-01'\u001b[39m,\n    time: \u001b[32m'01:17:40.667'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2144881.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68de0b0697884c8960efbfe1'\u001b[39m,\n    date: \u001b[32m'2025-10-01'\u001b[39m,\n    time: \u001b[32m'10:47:58.599'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Investment'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To dnyaneshwar for convert into cash given to Ajit Dhumal for plot'\u001b[39m,\n    runningBalance: \u001b[33m2144981.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68de0ad097884c8960efbfe0'\u001b[39m,\n    date: \u001b[32m'2025-10-01'\u001b[39m,\n    time: \u001b[32m'10:47:04.544'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Investment'\u001b[39m,\n    amount: \u001b[33m200000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To dnyaneshwar for convert into cash given to Ajit Dhumal for plot'\u001b[39m,\n    runningBalance: \u001b[33m2145981.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68de09ea97884c8960efbfdf'\u001b[39m,\n    date: \u001b[32m'2025-10-01'\u001b[39m,\n    time: \u001b[32m'10:43:14.313'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m250\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch'\u001b[39m,\n    runningBalance: \u001b[33m2345981.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68de09ae97884c8960efbfde'\u001b[39m,\n    date: \u001b[32m'2025-10-01'\u001b[39m,\n    time: \u001b[32m'10:42:14.555'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m60\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Shinde Pool to PCMC'\u001b[39m,\n    runningBalance: \u001b[33m2346231.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dd404897884c8960efbfdd'\u001b[39m,\n    date: \u001b[32m'2025-10-01'\u001b[39m,\n    time: \u001b[32m'20:22:56.461'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Utilities'\u001b[39m,\n    amount: \u001b[33m650\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'2nd Bike servicing '\u001b[39m,\n    runningBalance: \u001b[33m2346291.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dc3e6897884c8960efbfdb'\u001b[39m,\n    date: \u001b[32m'2025-10-01'\u001b[39m,\n    time: \u001b[32m'02:02:40.81'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m125\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Sweet - Sonpapadi '\u001b[39m,\n    runningBalance: \u001b[33m2346941.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dd3bc497884c8960efbfdc'\u001b[39m,\n    date: \u001b[32m'2025-09-30'\u001b[39m,\n    time: \u001b[32m'20:03:40.344'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m200\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Pune to Mumbai '\u001b[39m,\n    runningBalance: \u001b[33m2347066.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dc3db097884c8960efbfda'\u001b[39m,\n    date: \u001b[32m'2025-09-30'\u001b[39m,\n    time: \u001b[32m'01:59:36.726'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m150\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'FARSAN'\u001b[39m,\n    runningBalance: \u001b[33m2347266.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68dc1c4497884c8960efbfd9'\u001b[39m,\n    date: \u001b[32m'2025-09-30'\u001b[39m,\n    time: \u001b[32m'23:37:00.951'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Lending'\u001b[39m,\n    amount: \u001b[33m200\u001b[39m,\n    reimbursable: \u001b[33mtrue\u001b[39m,\n    comments: \u001b[32m'To Gopi Sawant'\u001b[39m,\n    runningBalance: \u001b[33m2347416.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68db6d7f97884c8960efbfd5'\u001b[39m,\n    date: \u001b[32m'2025-09-30'\u001b[39m,\n    time: \u001b[32m'11:11:19.303'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Family support'\u001b[39m,\n    amount: \u001b[33m1500\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Prajwal for survival '\u001b[39m,\n    runningBalance: \u001b[33m2347616.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68db6cfc97884c8960efbfd4'\u001b[39m,\n    date: \u001b[32m'2025-09-30'\u001b[39m,\n    time: \u001b[32m'11:09:08.813'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Investment'\u001b[39m,\n    amount: \u001b[33m300000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Dnyaneshwar for covert into cash for given to Ajit Dhumal'\u001b[39m,\n    runningBalance: \u001b[33m2349116.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68db6cbc97884c8960efbfd3'\u001b[39m,\n    date: \u001b[32m'2025-09-29'\u001b[39m,\n    time: \u001b[32m'11:08:04.185'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Dinner '\u001b[39m,\n    runningBalance: \u001b[33m2649116.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68db6ca997884c8960efbfd2'\u001b[39m,\n    date: \u001b[32m'2025-09-29'\u001b[39m,\n    time: \u001b[32m'11:07:45.848'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m50\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch '\u001b[39m,\n    runningBalance: \u001b[33m2649216.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d9823297884c8960efbfd1'\u001b[39m,\n    date: \u001b[32m'2025-09-29'\u001b[39m,\n    time: \u001b[32m'00:15:06.671'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Bank Charges'\u001b[39m,\n    amount: \u001b[33m18\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'While doing payment through Axis Bank app (Payee)'\u001b[39m,\n    runningBalance: \u001b[33m2649266.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d9801b97884c8960efbfcf'\u001b[39m,\n    date: \u001b[32m'2025-09-28'\u001b[39m,\n    time: \u001b[32m'00:06:11.713'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Investment'\u001b[39m,\n    amount: \u001b[33m160000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Dnyaneshwar for converting into cash to give Ajit Dhumal.'\u001b[39m,\n    runningBalance: \u001b[33m2649284.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d9574197884c8960efbfce'\u001b[39m,\n    date: \u001b[32m'2025-09-28'\u001b[39m,\n    time: \u001b[32m'21:11:53.07'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m200\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Dinner'\u001b[39m,\n    runningBalance: \u001b[33m2809284.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d9572997884c8960efbfcd'\u001b[39m,\n    date: \u001b[32m'2025-09-28'\u001b[39m,\n    time: \u001b[32m'21:11:29.76'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Pune to Mumbai'\u001b[39m,\n    runningBalance: \u001b[33m2809484.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d956f197884c8960efbfcc'\u001b[39m,\n    date: \u001b[32m'2025-09-28'\u001b[39m,\n    time: \u001b[32m'21:10:33.893'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m60\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Juice'\u001b[39m,\n    runningBalance: \u001b[33m2809584.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d8f13a97884c8960efbfcb'\u001b[39m,\n    date: \u001b[32m'2025-09-28'\u001b[39m,\n    time: \u001b[32m'13:56:34.841'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Gift/Donation'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To naam foundation for crisis of heavy rainfall in Marathwada'\u001b[39m,\n    runningBalance: \u001b[33m2809644.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d8f0c597884c8960efbfca'\u001b[39m,\n    date: \u001b[32m'2025-09-27'\u001b[39m,\n    time: \u001b[32m'13:54:37.779'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m60\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Milk'\u001b[39m,\n    runningBalance: \u001b[33m2809744.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d7c0a997884c8960efbfc9'\u001b[39m,\n    date: \u001b[32m'2025-09-27'\u001b[39m,\n    time: \u001b[32m'16:17:05.527'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Refund'\u001b[39m,\n    amount: \u001b[33m8000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'From shubham '\u001b[39m,\n    runningBalance: \u001b[33m2809804.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d7c08597884c8960efbfc8'\u001b[39m,\n    date: \u001b[32m'2025-09-27'\u001b[39m,\n    time: \u001b[32m'16:16:29.099'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Investment'\u001b[39m,\n    amount: \u001b[33m40000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Dnyaneshwar for converting into cash to give Ajit Dhumal.'\u001b[39m,\n    runningBalance: \u001b[33m2801804.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d7688a97884c8960efbfc7'\u001b[39m,\n    date: \u001b[32m'2025-09-26'\u001b[39m,\n    time: \u001b[32m'10:01:06.046'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Lending'\u001b[39m,\n    amount: \u001b[33m15000\u001b[39m,\n    reimbursable: \u001b[33mtrue\u001b[39m,\n    comments: \u001b[32m'To Laxmi for new mobile '\u001b[39m,\n    runningBalance: \u001b[33m2841804.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d767f797884c8960efbfc6'\u001b[39m,\n    date: \u001b[32m'2025-09-26'\u001b[39m,\n    time: \u001b[32m'09:58:39.041'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Gift/Donation'\u001b[39m,\n    amount: \u001b[33m15000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Gift realme 15 pro mobile to laxmi'\u001b[39m,\n    runningBalance: \u001b[33m2856804.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d68c9397884c8960efbfc5'\u001b[39m,\n    date: \u001b[32m'2025-09-26'\u001b[39m,\n    time: \u001b[32m'18:22:35.981'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Family support'\u001b[39m,\n    amount: \u001b[33m1200\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Paju for mess SEP'\u001b[39m,\n    runningBalance: \u001b[33m2871804.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d58b8e97884c8960efbfc4'\u001b[39m,\n    date: \u001b[32m'2025-09-26'\u001b[39m,\n    time: \u001b[32m'00:05:58.033'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m1600\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Bengaluru to Pune'\u001b[39m,\n    runningBalance: \u001b[33m2873004.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d57497a603b14c06a1f878'\u001b[39m,\n    date: \u001b[32m'2025-09-25'\u001b[39m,\n    time: \u001b[32m'22:27:59.362'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m500\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch'\u001b[39m,\n    runningBalance: \u001b[33m2874604.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d573c9a603b14c06a1f877'\u001b[39m,\n    date: \u001b[32m'2025-09-25'\u001b[39m,\n    time: \u001b[32m'22:24:33.219'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Printing & Stationery'\u001b[39m,\n    amount: \u001b[33m45\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Xerox of resume '\u001b[39m,\n    runningBalance: \u001b[33m2875104.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d572c5a603b14c06a1f875'\u001b[39m,\n    date: \u001b[32m'2025-09-25'\u001b[39m,\n    time: \u001b[32m'22:20:13.255'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m183\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch '\u001b[39m,\n    runningBalance: \u001b[33m2875149.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d57294a603b14c06a1f874'\u001b[39m,\n    date: \u001b[32m'2025-09-25'\u001b[39m,\n    time: \u001b[32m'22:19:24.905'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Rent'\u001b[39m,\n    amount: \u001b[33m600\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Benglore pg'\u001b[39m,\n    runningBalance: \u001b[33m2875332.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d57217a603b14c06a1f873'\u001b[39m,\n    date: \u001b[32m'2025-09-25'\u001b[39m,\n    time: \u001b[32m'22:17:19.801'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m256\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Intercity bengalore (Majestic-KRPuram-MG road)'\u001b[39m,\n    runningBalance: \u001b[33m2875932.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d41319a603b14c06a1f872'\u001b[39m,\n    date: \u001b[32m'2025-09-24'\u001b[39m,\n    time: \u001b[32m'21:19:45.253'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m240\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Dinner '\u001b[39m,\n    runningBalance: \u001b[33m2876188.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f8'\u001b[39m, \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d412a1a603b14c06a1f871'\u001b[39m,\n    date: \u001b[32m'2025-09-24'\u001b[39m,\n    time: \u001b[32m'21:17:45.734'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Family support'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'To Laxmi '\u001b[39m,\n    runningBalance: \u001b[33m2876428.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d41285a603b14c06a1f870'\u001b[39m,\n    date: \u001b[32m'2025-09-24'\u001b[39m,\n    time: \u001b[32m'21:17:17.971'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m180\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Lunch '\u001b[39m,\n    runningBalance: \u001b[33m2877428.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d41252a603b14c06a1f86f'\u001b[39m,\n    date: \u001b[32m'2025-09-24'\u001b[39m,\n    time: \u001b[32m'21:16:26.979'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m1570\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Pune to Bengaluru '\u001b[39m,\n    runningBalance: \u001b[33m2877608.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d41231a603b14c06a1f86e'\u001b[39m,\n    date: \u001b[32m'2025-09-23'\u001b[39m,\n    time: \u001b[32m'21:15:53.179'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Grocery'\u001b[39m,\n    amount: \u001b[33m201\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Pune home'\u001b[39m,\n    runningBalance: \u001b[33m2879178.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68d00a4ca603b14c06a1f862'\u001b[39m,\n    date: \u001b[32m'2025-09-21'\u001b[39m,\n    time: \u001b[32m'19:53:08.406'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m100\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Mosambi+Chinku'\u001b[39m,\n    runningBalance: \u001b[33m2879379.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f7'\u001b[39m, \u001b[32m'68bc24faf115e8a75b9bc4f8'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eab27a054cd6fb2be1cd8c'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'01:09:38.721'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2879479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eab10f054cd6fb2be1cd8b'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'01:03:35.58'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2877479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eab02f054cd6fb2be1cd8a'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:59:51.986'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2875479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaaf85054cd6fb2be1cd89'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:57:01.801'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2873479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaaf43054cd6fb2be1cd88'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:55:55.527'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2871479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaaf11054cd6fb2be1cd87'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:55:05.915'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2869479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaaeb1054cd6fb2be1cd86'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:53:29.186'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2867479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaae88054cd6fb2be1cd85'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:52:48.473'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2865479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaad3b054cd6fb2be1cd84'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:47:15.573'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2863479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaabe2054cd6fb2be1cd83'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:41:30.038'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2861479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaa54c054cd6fb2be1cd82'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:13:24.526'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m2000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2859479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaa52d054cd6fb2be1cd81'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:12:53.626'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2857479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaa4f5054cd6fb2be1cd80'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:11:57.496'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2856479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68eaa2e9054cd6fb2be1cd7f'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'00:03:13.06'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2855479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68ea9a42054cd6fb2be1cd7d'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'23:26:18.997'\u001b[39m,\n    type: \u001b[32m'credit'\u001b[39m,\n    category: \u001b[32m'Health'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2854479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68ea9897054cd6fb2be1cd7c'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'23:19:11.353'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Bank Charges'\u001b[39m,\n    amount: \u001b[33m1000\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Automation Testing'\u001b[39m,\n    runningBalance: \u001b[33m2853479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68ced242a603b14c06a1f861'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'21:41:46.411'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Food'\u001b[39m,\n    amount: \u001b[33m120\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'dinner'\u001b[39m,\n    runningBalance: \u001b[33m2854479.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68ced208a603b14c06a1f860'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'21:40:48.024'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m10\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'Warje to shinde pool pune'\u001b[39m,\n    runningBalance: \u001b[33m2854599.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  {\n    id: \u001b[32m'68ce6997a603b14c06a1f85f'\u001b[39m,\n    date: \u001b[32m'2025-09-20'\u001b[39m,\n    time: \u001b[32m'14:15:11.139'\u001b[39m,\n    type: \u001b[32m'debit'\u001b[39m,\n    category: \u001b[32m'Transport'\u001b[39m,\n    amount: \u001b[33m70\u001b[39m,\n    reimbursable: \u001b[33mfalse\u001b[39m,\n    comments: \u001b[32m'From Mumbai to warje pune'\u001b[39m,\n    runningBalance: \u001b[33m2854609.96\u001b[39m,\n    labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n  },\n  ... 159 more items\n]\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "Total Transaction Entries: 259\n"
                            },
                            {
                              "text": "Food Category: 115\n"
                            },
                            {
                              "text": "Transport Category: 18\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.279Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-27129c6c33f0277941a3",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 97,
                  "column": 9
                },
                {
                  "title": "PUT | Update Debit Transaction",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 165,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Update Transaction API for debit...\n"
                            },
                            {
                              "text": "üõ†Ô∏è Sending PUT request to: http://localhost:8080/api/transactions/68eabc44054cd6fb2be1cd98\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"date\": \"2025-10-10\",\n  \"type\": \"debit\",\n  \"category\": \"Bank Charges\",\n  \"amount\": \"10\",\n  \"reimbursable\": \"N\",\n  \"comments\": \"Testing update\",\n  \"labelIds\": [\n    \"68bc24f7f115e8a75b9bc4f6\"\n  ]\n}\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 161 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.24 KB\n"
                            },
                            {
                              "text": "üßæ PUT Response: {\n  id: \u001b[32m'68eabc44054cd6fb2be1cd98'\u001b[39m,\n  date: \u001b[32m'2025-10-10'\u001b[39m,\n  time: \u001b[32m'01:51:24.406'\u001b[39m,\n  type: \u001b[32m'debit'\u001b[39m,\n  category: \u001b[32m'Bank Charges'\u001b[39m,\n  amount: \u001b[33m10\u001b[39m,\n  reimbursable: \u001b[33mfalse\u001b[39m,\n  comments: \u001b[32m'Testing update'\u001b[39m,\n  runningBalance: \u001b[33m1626520.96\u001b[39m,\n  labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n}\n"
                            },
                            {
                              "text": "‚úÖ PUT request updated successfully! Updated name: N/A\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "‚úÖ Updated transaction ID: 68eabc44054cd6fb2be1cd98 with type: debit\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.333Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-1a20fb5524ca14e80c1c",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 102,
                  "column": 9
                },
                {
                  "title": "DELETE | Delete Debit Transaction",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 90,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Delete Transaction API for debit...\n"
                            },
                            {
                              "text": "üóëÔ∏è Sending DELETE request to: http://localhost:8080/api/transactions/68eabc44054cd6fb2be1cd98\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m204\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 90 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.00 KB\n"
                            },
                            {
                              "text": "üßæ DELETE Response: <empty>\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "‚úÖ Deleted transaction ID: 68eabc44054cd6fb2be1cd98 for type: debit\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.499Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-3fd848ee52e426f72a22",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 107,
                  "column": 9
                },
                {
                  "title": "POST | Credit Transaction",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 63,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Post Transaction API for credit...\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"date\": \"2025-10-10\",\n  \"type\": \"credit\",\n  \"category\": \"Gift/Donation\",\n  \"amount\": \"10\",\n  \"reimbursable\": \"N\",\n  \"comments\": \"testing\",\n  \"labelIds\": [\n    \"68bc24faf115e8a75b9bc4f8\",\n    \"68bc24f7f115e8a75b9bc4f6\"\n  ]\n}\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 61 ms\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.27 KB\n"
                            },
                            {
                              "text": "üßæ JSON Response: {\n  id: \u001b[32m'68eabc44054cd6fb2be1cd99'\u001b[39m,\n  date: \u001b[32m'2025-10-10'\u001b[39m,\n  time: \u001b[32m'01:51:24.640601'\u001b[39m,\n  type: \u001b[32m'credit'\u001b[39m,\n  category: \u001b[32m'Gift/Donation'\u001b[39m,\n  amount: \u001b[33m10\u001b[39m,\n  reimbursable: \u001b[33mfalse\u001b[39m,\n  comments: \u001b[32m'testing'\u001b[39m,\n  runningBalance: \u001b[33m1624530.96\u001b[39m,\n  labelIds: [ \u001b[32m'68bc24faf115e8a75b9bc4f8'\u001b[39m, \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n}\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "üîë Global Transaction ID set: 68eabc44054cd6fb2be1cd99\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.591Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-512fc0717ff6610a9f21",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 111,
                  "column": 9
                },
                {
                  "title": "PUT | Update Credit Transaction",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 168,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Update Transaction API for credit...\n"
                            },
                            {
                              "text": "üõ†Ô∏è Sending PUT request to: http://localhost:8080/api/transactions/68eabc44054cd6fb2be1cd99\n"
                            },
                            {
                              "text": "‚úÖ Payload: {\n  \"date\": \"2025-10-10\",\n  \"type\": \"credit\",\n  \"category\": \"Bank Charges\",\n  \"amount\": \"10\",\n  \"reimbursable\": \"N\",\n  \"comments\": \"Testing update\",\n  \"labelIds\": [\n    \"68bc24f7f115e8a75b9bc4f6\"\n  ]\n}\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 165 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.24 KB\n"
                            },
                            {
                              "text": "üßæ PUT Response: {\n  id: \u001b[32m'68eabc44054cd6fb2be1cd99'\u001b[39m,\n  date: \u001b[32m'2025-10-10'\u001b[39m,\n  time: \u001b[32m'01:51:24.714'\u001b[39m,\n  type: \u001b[32m'credit'\u001b[39m,\n  category: \u001b[32m'Bank Charges'\u001b[39m,\n  amount: \u001b[33m10\u001b[39m,\n  reimbursable: \u001b[33mfalse\u001b[39m,\n  comments: \u001b[32m'Testing update'\u001b[39m,\n  runningBalance: \u001b[33m1626540.96\u001b[39m,\n  labelIds: [ \u001b[32m'68bc24f7f115e8a75b9bc4f6'\u001b[39m ]\n}\n"
                            },
                            {
                              "text": "‚úÖ PUT request updated successfully! Updated name: N/A\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "‚úÖ Updated transaction ID: 68eabc44054cd6fb2be1cd99 with type: credit\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.655Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-ab18c8dd30537ab29c76",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 115,
                  "column": 9
                },
                {
                  "title": "DELETE | Delete Credit Transaction",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "",
                      "projectName": "",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 102,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "üîÑ Verifying: Delete Transaction API for credit...\n"
                            },
                            {
                              "text": "üóëÔ∏è Sending DELETE request to: http://localhost:8080/api/transactions/68eabc44054cd6fb2be1cd99\n"
                            },
                            {
                              "text": "üîÅ Status Code: \u001b[33m204\u001b[39m\n"
                            },
                            {
                              "text": "‚è±Ô∏è Response Time: 100 ms\n"
                            },
                            {
                              "text": "üì¶ Response Size: 0.00 KB\n"
                            },
                            {
                              "text": "üßæ DELETE Response: <empty>\n"
                            },
                            {
                              "text": "----------------------------------------------------------------------------------------------------\n"
                            },
                            {
                              "text": "‚úÖ Deleted transaction ID: 68eabc44054cd6fb2be1cd99 for type: credit\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-11T20:21:24.825Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "22600f81cd952af39019-3f7cb6ecb4ae902f775e",
                  "file": "Tests/FinanceTracker.test.js",
                  "line": 119,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "üß© Login Scenarios",
          "file": "Tests/FinanceTracker.test.js",
          "line": 129,
          "column": 15,
          "specs": [
            {
              "title": "POST | Login through API",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [
                    {
                      "type": "skip"
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "",
                  "projectName": "",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-11T20:21:23.255Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "22600f81cd952af39019-af3ec2f6f42ff0fa89db",
              "file": "Tests/FinanceTracker.test.js",
              "line": 130,
              "column": 5
            },
            {
              "title": "UI | Login with Valid Credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [
                    {
                      "type": "skip"
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "",
                  "projectName": "",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-11T20:21:23.257Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "22600f81cd952af39019-4209df2e4dcf19a2c0e7",
              "file": "Tests/FinanceTracker.test.js",
              "line": 135,
              "column": 5
            },
            {
              "title": "UI | Login with Invalid Credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [
                    {
                      "type": "skip"
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "",
                  "projectName": "",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-11T20:21:23.258Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "22600f81cd952af39019-46a70dd596242b2734fd",
              "file": "Tests/FinanceTracker.test.js",
              "line": 139,
              "column": 5
            }
          ]
        },
        {
          "title": "Arthmatical Calculation",
          "file": "Tests/FinanceTracker.test.js",
          "line": 146,
          "column": 6,
          "specs": [
            {
              "title": "UI | Table calculations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "",
                  "projectName": "",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 66618,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîÑ Verifying: Post Login API...\n"
                        },
                        {
                          "text": "‚úÖ Payload: {\n  \"email\": \"pratiknarute2@gmail.com\",\n  \"password\": \"Pratik@1234\"\n}\n"
                        },
                        {
                          "text": "‚è±Ô∏è Response Time: 88 ms\n"
                        },
                        {
                          "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                        },
                        {
                          "text": "üì¶ Response Size: 0.20 KB\n"
                        },
                        {
                          "text": "üßæ JSON Response: {\n  message: \u001b[32m'Logged in successfully'\u001b[39m,\n  token: \u001b[32m'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwcmF0aWtuYXJ1dGUyQGdtYWlsLmNvbSIsImlhdCI6MTc2MDIxNDA4NCwiZXhwIjoxNzYyODA2MDg0fQ.VEBrS38amdlgLkPjosqSnAyRYKkg9dBf7rvJW2BBbQU'\u001b[39m\n}\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Post Login Message\n"
                        },
                        {
                          "text": "Actual: Logged in successfully | Expected: Logged in successfully\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîë Global token set: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwcmF0aWtuYXJ1dGUyQGdtYWlsLmNvbSIsImlhdCI6MTc2MDIxNDA4NCwiZXhwIjoxNzYyODA2MDg0fQ.VEBrS38amdlgLkPjosqSnAyRYKkg9dBf7rvJW2BBbQU\n"
                        },
                        {
                          "text": "üåê Navigating to URL: [http://localhost:3000/expense-tracker]...\n"
                        },
                        {
                          "text": "‚úÖ Successfully navigated to: [http://localhost:3000/expense-tracker]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.22 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 10 = (0 + 10)\n"
                        },
                        {
                          "text": "Debit: 1010 = (10 + 1000)\n"
                        },
                        {
                          "text": "Debit: 2010 = (1010 + 1000)\n"
                        },
                        {
                          "text": "Debit: 2020 = (2010 + 10)\n"
                        },
                        {
                          "text": "Debit: 2030 = (2020 + 10)\n"
                        },
                        {
                          "text": "Debit: 2196 = (2030 + 166)\n"
                        },
                        {
                          "text": "Debit: 22196 = (2196 + 20000)\n"
                        },
                        {
                          "text": "Debit: 23196 = (22196 + 1000)\n"
                        },
                        {
                          "text": "Debit: 23446 = (23196 + 250)\n"
                        },
                        {
                          "text": "Debit: 23626 = (23446 + 180)\n"
                        },
                        {
                          "text": "Debit: 23691 = (23626 + 65)\n"
                        },
                        {
                          "text": "Debit: 23741 = (23691 + 50)\n"
                        },
                        {
                          "text": "Debit: 23911 = (23741 + 170)\n"
                        },
                        {
                          "text": "Credit: 10 = (0 + 10)\n"
                        },
                        {
                          "text": "Credit: 2510 = (10 + 2500)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 2...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 2]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 23976 = (23911 + 65)\n"
                        },
                        {
                          "text": "Debit: 24046 = (23976 + 70)\n"
                        },
                        {
                          "text": "Debit: 24076 = (24046 + 30)\n"
                        },
                        {
                          "text": "Debit: 24126 = (24076 + 50)\n"
                        },
                        {
                          "text": "Debit: 28426 = (24126 + 4300)\n"
                        },
                        {
                          "text": "Debit: 28496 = (28426 + 70)\n"
                        },
                        {
                          "text": "Debit: 28776 = (28496 + 280)\n"
                        },
                        {
                          "text": "Debit: 33136 = (28776 + 4360)\n"
                        },
                        {
                          "text": "Debit: 33326 = (33136 + 190)\n"
                        },
                        {
                          "text": "Debit: 33371 = (33326 + 45)\n"
                        },
                        {
                          "text": "Debit: 33501 = (33371 + 130)\n"
                        },
                        {
                          "text": "Debit: 33776 = (33501 + 275)\n"
                        },
                        {
                          "text": "Debit: 33866 = (33776 + 90)\n"
                        },
                        {
                          "text": "Credit: 5510 = (2510 + 3000)\n"
                        },
                        {
                          "text": "Credit: 127802 = (5510 + 122292)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 3...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 3]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 35171 = (33866 + 1305)\n"
                        },
                        {
                          "text": "Debit: 35193 = (35171 + 22)\n"
                        },
                        {
                          "text": "Debit: 35293 = (35193 + 100)\n"
                        },
                        {
                          "text": "Debit: 35393 = (35293 + 100)\n"
                        },
                        {
                          "text": "Debit: 35493 = (35393 + 100)\n"
                        },
                        {
                          "text": "Debit: 35593 = (35493 + 100)\n"
                        },
                        {
                          "text": "Debit: 35693 = (35593 + 100)\n"
                        },
                        {
                          "text": "Debit: 35793 = (35693 + 100)\n"
                        },
                        {
                          "text": "Debit: 35803 = (35793 + 10)\n"
                        },
                        {
                          "text": "Debit: 48803 = (35803 + 13000)\n"
                        },
                        {
                          "text": "Debit: 49153 = (48803 + 350)\n"
                        },
                        {
                          "text": "Debit: 249153 = (49153 + 200000)\n"
                        },
                        {
                          "text": "Debit: 648153 = (249153 + 399000)\n"
                        },
                        {
                          "text": "Debit: 648253 = (648153 + 100)\n"
                        },
                        {
                          "text": "Debit: 649253 = (648253 + 1000)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 4...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 4]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 849253 = (649253 + 200000)\n"
                        },
                        {
                          "text": "Debit: 849503 = (849253 + 250)\n"
                        },
                        {
                          "text": "Debit: 849563 = (849503 + 60)\n"
                        },
                        {
                          "text": "Debit: 850213 = (849563 + 650)\n"
                        },
                        {
                          "text": "Debit: 850338 = (850213 + 125)\n"
                        },
                        {
                          "text": "Debit: 850538 = (850338 + 200)\n"
                        },
                        {
                          "text": "Debit: 850688 = (850538 + 150)\n"
                        },
                        {
                          "text": "Debit: 850888 = (850688 + 200)\n"
                        },
                        {
                          "text": "Debit: 852388 = (850888 + 1500)\n"
                        },
                        {
                          "text": "Debit: 1152388 = (852388 + 300000)\n"
                        },
                        {
                          "text": "Debit: 1152488 = (1152388 + 100)\n"
                        },
                        {
                          "text": "Debit: 1152538 = (1152488 + 50)\n"
                        },
                        {
                          "text": "Debit: 1152556 = (1152538 + 18)\n"
                        },
                        {
                          "text": "Debit: 1312556 = (1152556 + 160000)\n"
                        },
                        {
                          "text": "Debit: 1312756 = (1312556 + 200)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 5...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 5]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1312856 = (1312756 + 100)\n"
                        },
                        {
                          "text": "Debit: 1312916 = (1312856 + 60)\n"
                        },
                        {
                          "text": "Debit: 1313016 = (1312916 + 100)\n"
                        },
                        {
                          "text": "Debit: 1313076 = (1313016 + 60)\n"
                        },
                        {
                          "text": "Debit: 1353076 = (1313076 + 40000)\n"
                        },
                        {
                          "text": "Debit: 1368076 = (1353076 + 15000)\n"
                        },
                        {
                          "text": "Debit: 1383076 = (1368076 + 15000)\n"
                        },
                        {
                          "text": "Debit: 1384276 = (1383076 + 1200)\n"
                        },
                        {
                          "text": "Debit: 1385876 = (1384276 + 1600)\n"
                        },
                        {
                          "text": "Debit: 1386376 = (1385876 + 500)\n"
                        },
                        {
                          "text": "Debit: 1386421 = (1386376 + 45)\n"
                        },
                        {
                          "text": "Debit: 1386604 = (1386421 + 183)\n"
                        },
                        {
                          "text": "Debit: 1387204 = (1386604 + 600)\n"
                        },
                        {
                          "text": "Debit: 1387460 = (1387204 + 256)\n"
                        },
                        {
                          "text": "Credit: 135802 = (127802 + 8000)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 6...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 6]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1387700 = (1387460 + 240)\n"
                        },
                        {
                          "text": "Debit: 1388700 = (1387700 + 1000)\n"
                        },
                        {
                          "text": "Debit: 1388880 = (1388700 + 180)\n"
                        },
                        {
                          "text": "Debit: 1390450 = (1388880 + 1570)\n"
                        },
                        {
                          "text": "Debit: 1390651 = (1390450 + 201)\n"
                        },
                        {
                          "text": "Debit: 1390751 = (1390651 + 100)\n"
                        },
                        {
                          "text": "Credit: 137802 = (135802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 139802 = (137802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 141802 = (139802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 143802 = (141802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 145802 = (143802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 147802 = (145802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 149802 = (147802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 151802 = (149802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 153802 = (151802 + 2000)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 7...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 7]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1391751 = (1390751 + 1000)\n"
                        },
                        {
                          "text": "Debit: 1391871 = (1391751 + 120)\n"
                        },
                        {
                          "text": "Debit: 1391881 = (1391871 + 10)\n"
                        },
                        {
                          "text": "Debit: 1391951 = (1391881 + 70)\n"
                        },
                        {
                          "text": "Debit: 1392191 = (1391951 + 240)\n"
                        },
                        {
                          "text": "Debit: 1394191 = (1392191 + 2000)\n"
                        },
                        {
                          "text": "Debit: 1394251 = (1394191 + 60)\n"
                        },
                        {
                          "text": "Debit: 1394296 = (1394251 + 45)\n"
                        },
                        {
                          "text": "Credit: 155802 = (153802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 157802 = (155802 + 2000)\n"
                        },
                        {
                          "text": "Credit: 158802 = (157802 + 1000)\n"
                        },
                        {
                          "text": "Credit: 159802 = (158802 + 1000)\n"
                        },
                        {
                          "text": "Credit: 160802 = (159802 + 1000)\n"
                        },
                        {
                          "text": "Credit: 161802 = (160802 + 1000)\n"
                        },
                        {
                          "text": "Credit: 161852 = (161802 + 50)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 8...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 8]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1394436 = (1394296 + 140)\n"
                        },
                        {
                          "text": "Debit: 1394566 = (1394436 + 130)\n"
                        },
                        {
                          "text": "Debit: 1394751 = (1394566 + 185)\n"
                        },
                        {
                          "text": "Debit: 1394831 = (1394751 + 80)\n"
                        },
                        {
                          "text": "Debit: 1397331 = (1394831 + 2500)\n"
                        },
                        {
                          "text": "Debit: 1397366 = (1397331 + 35)\n"
                        },
                        {
                          "text": "Debit: 1397386 = (1397366 + 20)\n"
                        },
                        {
                          "text": "Debit: 1397610 = (1397386 + 224)\n"
                        },
                        {
                          "text": "Debit: 1397665 = (1397610 + 55)\n"
                        },
                        {
                          "text": "Debit: 1397701 = (1397665 + 36)\n"
                        },
                        {
                          "text": "Debit: 1397846 = (1397701 + 145)\n"
                        },
                        {
                          "text": "Debit: 1398696 = (1397846 + 850)\n"
                        },
                        {
                          "text": "Debit: 1448696 = (1398696 + 50000)\n"
                        },
                        {
                          "text": "Debit: 1448746 = (1448696 + 50)\n"
                        },
                        {
                          "text": "Credit: 171852 = (161852 + 10000)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 9...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 9]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1498746 = (1448746 + 50000)\n"
                        },
                        {
                          "text": "Debit: 1498791 = (1498746 + 45)\n"
                        },
                        {
                          "text": "Debit: 1498841 = (1498791 + 50)\n"
                        },
                        {
                          "text": "Debit: 1499084 = (1498841 + 243)\n"
                        },
                        {
                          "text": "Debit: 1499164 = (1499084 + 80)\n"
                        },
                        {
                          "text": "Debit: 1508125 = (1499164 + 8961)\n"
                        },
                        {
                          "text": "Debit: 1508209 = (1508125 + 84)\n"
                        },
                        {
                          "text": "Debit: 1516209 = (1508209 + 8000)\n"
                        },
                        {
                          "text": "Debit: 1516467 = (1516209 + 258)\n"
                        },
                        {
                          "text": "Debit: 1516477 = (1516467 + 10)\n"
                        },
                        {
                          "text": "Debit: 1516522 = (1516477 + 45)\n"
                        },
                        {
                          "text": "Debit: 1516567 = (1516522 + 45)\n"
                        },
                        {
                          "text": "Debit: 1516613 = (1516567 + 46)\n"
                        },
                        {
                          "text": "Credit: 176852 = (171852 + 5000)\n"
                        },
                        {
                          "text": "Credit: 177517 = (176852 + 665)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 10...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 10]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1517243 = (1516613 + 630)\n"
                        },
                        {
                          "text": "Debit: 1517363 = (1517243 + 120)\n"
                        },
                        {
                          "text": "Debit: 1517387 = (1517363 + 24)\n"
                        },
                        {
                          "text": "Debit: 1518052 = (1517387 + 665)\n"
                        },
                        {
                          "text": "Debit: 1518717 = (1518052 + 665)\n"
                        },
                        {
                          "text": "Debit: 1518738 = (1518717 + 21)\n"
                        },
                        {
                          "text": "Debit: 1518835 = (1518738 + 97)\n"
                        },
                        {
                          "text": "Debit: 1520835 = (1518835 + 2000)\n"
                        },
                        {
                          "text": "Debit: 1520945 = (1520835 + 110)\n"
                        },
                        {
                          "text": "Debit: 1520965 = (1520945 + 20)\n"
                        },
                        {
                          "text": "Debit: 1521055 = (1520965 + 90)\n"
                        },
                        {
                          "text": "Debit: 1521135 = (1521055 + 80)\n"
                        },
                        {
                          "text": "Debit: 1521410 = (1521135 + 275)\n"
                        },
                        {
                          "text": "Debit: 1521460 = (1521410 + 50)\n"
                        },
                        {
                          "text": "Credit: 299809 = (177517 + 122292)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 11...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 11]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1521535 = (1521460 + 75)\n"
                        },
                        {
                          "text": "Debit: 1521584 = (1521535 + 49)\n"
                        },
                        {
                          "text": "Debit: 1521644 = (1521584 + 60)\n"
                        },
                        {
                          "text": "Debit: 1522214 = (1521644 + 570)\n"
                        },
                        {
                          "text": "Debit: 1522334 = (1522214 + 120)\n"
                        },
                        {
                          "text": "Debit: 1522383 = (1522334 + 49)\n"
                        },
                        {
                          "text": "Debit: 1523528 = (1522383 + 1145)\n"
                        },
                        {
                          "text": "Debit: 1536533 = (1523528 + 13005)\n"
                        },
                        {
                          "text": "Debit: 1536583 = (1536533 + 50)\n"
                        },
                        {
                          "text": "Debit: 1536632 = (1536583 + 49)\n"
                        },
                        {
                          "text": "Debit: 1536962 = (1536632 + 330)\n"
                        },
                        {
                          "text": "Debit: 1537077 = (1536962 + 115)\n"
                        },
                        {
                          "text": "Debit: 1537117 = (1537077 + 40)\n"
                        },
                        {
                          "text": "Debit: 1539017 = (1537117 + 1900)\n"
                        },
                        {
                          "text": "Debit: 1539037 = (1539017 + 20)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 12...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 12]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1539537 = (1539037 + 500)\n"
                        },
                        {
                          "text": "Debit: 1539587 = (1539537 + 50)\n"
                        },
                        {
                          "text": "Debit: 1581587 = (1539587 + 42000)\n"
                        },
                        {
                          "text": "Debit: 1581611 = (1581587 + 24)\n"
                        },
                        {
                          "text": "Debit: 1582611 = (1581611 + 1000)\n"
                        },
                        {
                          "text": "Debit: 1591211 = (1582611 + 8600)\n"
                        },
                        {
                          "text": "Debit: 1592211 = (1591211 + 1000)\n"
                        },
                        {
                          "text": "Debit: 1592311 = (1592211 + 100)\n"
                        },
                        {
                          "text": "Debit: 1592351 = (1592311 + 40)\n"
                        },
                        {
                          "text": "Debit: 1592421 = (1592351 + 70)\n"
                        },
                        {
                          "text": "Debit: 1592891 = (1592421 + 470)\n"
                        },
                        {
                          "text": "Debit: 1592991 = (1592891 + 100)\n"
                        },
                        {
                          "text": "Debit: 1594803 = (1592991 + 1812)\n"
                        },
                        {
                          "text": "Debit: 1595063 = (1594803 + 260)\n"
                        },
                        {
                          "text": "Credit: 3149809 = (299809 + 2850000)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 13...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 13]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1595113 = (1595063 + 50)\n"
                        },
                        {
                          "text": "Debit: 1595223 = (1595113 + 110)\n"
                        },
                        {
                          "text": "Debit: 1595273 = (1595223 + 50)\n"
                        },
                        {
                          "text": "Debit: 1595473 = (1595273 + 200)\n"
                        },
                        {
                          "text": "Debit: 1595593 = (1595473 + 120)\n"
                        },
                        {
                          "text": "Debit: 1595642 = (1595593 + 49)\n"
                        },
                        {
                          "text": "Debit: 1597642 = (1595642 + 2000)\n"
                        },
                        {
                          "text": "Debit: 1598504 = (1597642 + 862)\n"
                        },
                        {
                          "text": "Debit: 1598574 = (1598504 + 70)\n"
                        },
                        {
                          "text": "Debit: 1600447 = (1598574 + 1873)\n"
                        },
                        {
                          "text": "Debit: 1600747 = (1600447 + 300)\n"
                        },
                        {
                          "text": "Debit: 1601647 = (1600747 + 900)\n"
                        },
                        {
                          "text": "Debit: 1602547 = (1601647 + 900)\n"
                        },
                        {
                          "text": "Debit: 1602867 = (1602547 + 320)\n"
                        },
                        {
                          "text": "Credit: 3150042 = (3149809 + 233)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 14...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 14]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1603137 = (1602867 + 270)\n"
                        },
                        {
                          "text": "Debit: 1603337 = (1603137 + 200)\n"
                        },
                        {
                          "text": "Debit: 1603412 = (1603337 + 75)\n"
                        },
                        {
                          "text": "Debit: 1603447 = (1603412 + 35)\n"
                        },
                        {
                          "text": "Debit: 1603517 = (1603447 + 70)\n"
                        },
                        {
                          "text": "Debit: 1603592 = (1603517 + 75)\n"
                        },
                        {
                          "text": "Debit: 1603662 = (1603592 + 70)\n"
                        },
                        {
                          "text": "Debit: 1603737 = (1603662 + 75)\n"
                        },
                        {
                          "text": "Debit: 1603787 = (1603737 + 50)\n"
                        },
                        {
                          "text": "Debit: 1603832 = (1603787 + 45)\n"
                        },
                        {
                          "text": "Debit: 1603877 = (1603832 + 45)\n"
                        },
                        {
                          "text": "Debit: 1603987 = (1603877 + 110)\n"
                        },
                        {
                          "text": "Debit: 1604287 = (1603987 + 300)\n"
                        },
                        {
                          "text": "Debit: 1604377 = (1604287 + 90)\n"
                        },
                        {
                          "text": "Credit: 3160042 = (3150042 + 10000)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 15...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 15]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1605327 = (1604377 + 950)\n"
                        },
                        {
                          "text": "Debit: 1605417 = (1605327 + 90)\n"
                        },
                        {
                          "text": "Debit: 1605650 = (1605417 + 233)\n"
                        },
                        {
                          "text": "Debit: 1606000 = (1605650 + 350)\n"
                        },
                        {
                          "text": "Debit: 1607500 = (1606000 + 1500)\n"
                        },
                        {
                          "text": "Debit: 1607650 = (1607500 + 150)\n"
                        },
                        {
                          "text": "Debit: 1607955.04 = (1607650 + 305.04)\n"
                        },
                        {
                          "text": "Debit: 1608275.04 = (1607955.04 + 320)\n"
                        },
                        {
                          "text": "Debit: 1609375.04 = (1608275.04 + 1100)\n"
                        },
                        {
                          "text": "Debit: 1609875.04 = (1609375.04 + 500)\n"
                        },
                        {
                          "text": "Debit: 1609975.04 = (1609875.04 + 100)\n"
                        },
                        {
                          "text": "Debit: 1610000.04 = (1609975.04 + 25)\n"
                        },
                        {
                          "text": "Debit: 1612400.04 = (1610000.04 + 2400)\n"
                        },
                        {
                          "text": "Debit: 1612475.04 = (1612400.04 + 75)\n"
                        },
                        {
                          "text": "Debit: 1612540.04 = (1612475.04 + 65)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 16...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 16]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1612585.04 = (1612540.04 + 45)\n"
                        },
                        {
                          "text": "Debit: 1612630.04 = (1612585.04 + 45)\n"
                        },
                        {
                          "text": "Debit: 1612830.04 = (1612630.04 + 200)\n"
                        },
                        {
                          "text": "Debit: 1612901.04 = (1612830.04 + 71)\n"
                        },
                        {
                          "text": "Debit: 1613651.04 = (1612901.04 + 750)\n"
                        },
                        {
                          "text": "Debit: 1613881.04 = (1613651.04 + 230)\n"
                        },
                        {
                          "text": "Debit: 1614071.04 = (1613881.04 + 190)\n"
                        },
                        {
                          "text": "Debit: 1614161.04 = (1614071.04 + 90)\n"
                        },
                        {
                          "text": "Debit: 1634161.04 = (1614161.04 + 20000)\n"
                        },
                        {
                          "text": "Debit: 1634179.04 = (1634161.04 + 18)\n"
                        },
                        {
                          "text": "Debit: 1634279.04 = (1634179.04 + 100)\n"
                        },
                        {
                          "text": "Debit: 1634293.04 = (1634279.04 + 14)\n"
                        },
                        {
                          "text": "Debit: 1634993.04 = (1634293.04 + 700)\n"
                        },
                        {
                          "text": "Debit: 1635103.04 = (1634993.04 + 110)\n"
                        },
                        {
                          "text": "Credit: 3161542 = (3160042 + 1500)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 17...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 17]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1637603.04 = (1635103.04 + 2500)\n"
                        },
                        {
                          "text": "Debit: 1637668.04 = (1637603.04 + 65)\n"
                        },
                        {
                          "text": "Debit: 1637713.04 = (1637668.04 + 45)\n"
                        },
                        {
                          "text": "Debit: 1637743.04 = (1637713.04 + 30)\n"
                        },
                        {
                          "text": "Debit: 1637788.04 = (1637743.04 + 45)\n"
                        },
                        {
                          "text": "Debit: 1637823.04 = (1637788.04 + 35)\n"
                        },
                        {
                          "text": "Debit: 1637923.04 = (1637823.04 + 100)\n"
                        },
                        {
                          "text": "Debit: 1637968.04 = (1637923.04 + 45)\n"
                        },
                        {
                          "text": "Debit: 1638098.04 = (1637968.04 + 130)\n"
                        },
                        {
                          "text": "Debit: 1708098.04 = (1638098.04 + 70000)\n"
                        },
                        {
                          "text": "Debit: 1708116.04 = (1708098.04 + 18)\n"
                        },
                        {
                          "text": "Debit: 1708161.04 = (1708116.04 + 45)\n"
                        },
                        {
                          "text": "Debit: 1708921.04 = (1708161.04 + 760)\n"
                        },
                        {
                          "text": "Debit: 1709011.04 = (1708921.04 + 90)\n"
                        },
                        {
                          "text": "Credit: 3283542 = (3161542 + 122000)\n"
                        },
                        {
                          "text": "üîÑ Clicking: Pagination Next: 18...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Pagination Next: 18]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "Debit: 1719011.04 = (1709011.04 + 10000)\n"
                        },
                        {
                          "text": "Debit: 1724011.04 = (1719011.04 + 5000)\n"
                        },
                        {
                          "text": "Debit: 1739011.04 = (1724011.04 + 15000)\n"
                        },
                        {
                          "text": "Credit: 3313542 = (3283542 + 30000)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è Next button did not re-enable ‚Äî likely last page.\n"
                        },
                        {
                          "text": "üö´ Next button is disabled ‚Äî last page (19) reached!\n"
                        },
                        {
                          "text": "‚úÖ Processed 18 pages successfully.\n"
                        },
                        {
                          "text": "üí∞ Total Debit Amount: 1739011.04 | Total Credit Amount: 3313542.00 \n"
                        },
                        {
                          "text": "üîÑ Verifying: Get Opening Balance API...\n"
                        },
                        {
                          "text": "üåê Sending GET request to: http://localhost:8080/api/transactions/opening-balance\n"
                        },
                        {
                          "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                        },
                        {
                          "text": "‚è±Ô∏è Response Time: 26 ms\n"
                        },
                        {
                          "text": "üì¶ Response Size: 0.01 KB\n"
                        },
                        {
                          "text": "üßæ GET Response: \u001b[33m50000\u001b[39m\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Summary Total expense balance matching with all debit transaction\n"
                        },
                        {
                          "text": "Actual: 1739011.04 | Expected: 1739011.04\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Summary Total income balance matching with all credit transaction\n"
                        },
                        {
                          "text": "Actual: 3313542.00 | Expected: 3313542.00\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Summary Current balance matching\n"
                        },
                        {
                          "text": "Actual: 1624530.96 | Expected: 1624530.96\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-11T20:21:23.529Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "22600f81cd952af39019-17f710040bb09a75baa5",
              "file": "Tests/FinanceTracker.test.js",
              "line": 147,
              "column": 5
            },
            {
              "title": "UI | Impact Calculation of Created transaction",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "",
                  "projectName": "",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 8216,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîÑ Verifying: Post Login API...\n"
                        },
                        {
                          "text": "‚úÖ Payload: {\n  \"email\": \"pratiknarute2@gmail.com\",\n  \"password\": \"Pratik@1234\"\n}\n"
                        },
                        {
                          "text": "‚è±Ô∏è Response Time: 107 ms\n"
                        },
                        {
                          "text": "üîÅ Status Code: \u001b[33m200\u001b[39m\n"
                        },
                        {
                          "text": "üì¶ Response Size: 0.20 KB\n"
                        },
                        {
                          "text": "üßæ JSON Response: {\n  message: \u001b[32m'Logged in successfully'\u001b[39m,\n  token: \u001b[32m'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwcmF0aWtuYXJ1dGUyQGdtYWlsLmNvbSIsImlhdCI6MTc2MDIxNDA4NSwiZXhwIjoxNzYyODA2MDg1fQ.vTlnoUGbaoBiF1s9DwGhByifD9vFhyQgunxqJBGct9U'\u001b[39m\n}\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Post Login Message\n"
                        },
                        {
                          "text": "Actual: Logged in successfully | Expected: Logged in successfully\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîë Global token set: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwcmF0aWtuYXJ1dGUyQGdtYWlsLmNvbSIsImlhdCI6MTc2MDIxNDA4NSwiZXhwIjoxNzYyODA2MDg1fQ.vTlnoUGbaoBiF1s9DwGhByifD9vFhyQgunxqJBGct9U\n"
                        },
                        {
                          "text": "üåê Navigating to URL: [http://localhost:3000/expense-tracker]...\n"
                        },
                        {
                          "text": "‚úÖ Successfully navigated to: [http://localhost:3000/expense-tracker]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.25 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîπ Creating debit transaction\n"
                        },
                        {
                          "text": "üîÑ Clicking: Add Entry...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Add Entry]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Filling: Select Date...\n"
                        },
                        {
                          "text": "‚úÖ Filled [Select Date] with value: 2025-10-09\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.08 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Clicking: Debit...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Debit]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Selecting [Food] from Categry Dropdown...\n"
                        },
                        {
                          "text": "‚úÖ Selected [Food] from Categry Dropdown\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Filling: Amount Field...\n"
                        },
                        {
                          "text": "‚úÖ Filled [Amount Field] with value: 1000\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Filling: Comment Field...\n"
                        },
                        {
                          "text": "‚úÖ Filled [Comment Field] with value: Autoamtion Testing\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Clicking: Essentials...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Essentials]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Clicking: Add Transaction...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Add Transaction]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.01 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "‚úÖ debit transaction added successfully\n"
                        },
                        {
                          "text": "üîÑ Verifying: Transaction Added Successfull Toaster Message...\n"
                        },
                        {
                          "text": "‚úÖ Found [Transaction Added Successfull Toaster Message]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.23 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Transaction Added Successfull Toaster Message\n"
                        },
                        {
                          "text": "Actual: true | Expected: true\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Current Balance summary impacted by Added Transaction\n"
                        },
                        {
                          "text": "Actual: 1623520.96 | Expected: 1623520.96\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Total Expenses summary impacted by Added Transaction\n"
                        },
                        {
                          "text": "Actual: 1740011.04 | Expected: 1740011.04\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Total Income summary impacted by Added Transaction\n"
                        },
                        {
                          "text": "Actual: 3313532 | Expected: 3313532\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Clicking: Show Filter...\n"
                        },
                        {
                          "text": "‚úÖ Clicked [Show Filter]\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.02 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Filling: Start Date...\n"
                        },
                        {
                          "text": "‚úÖ Filled [Start Date] with value: 2025-10-09\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.04 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîÑ Filling: End Date...\n"
                        },
                        {
                          "text": "‚úÖ Filled [End Date] with value: 2025-10-09\n"
                        },
                        {
                          "text": "‚è≥ Time taken: 0.03 sec\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Date validation\n"
                        },
                        {
                          "text": "Actual: 2025-10-09 | Expected: 2025-10-09\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Category validation\n"
                        },
                        {
                          "text": "Actual: Food | Expected: Food\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Label validation\n"
                        },
                        {
                          "text": "Actual: Essentials | Expected: Essentials\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        },
                        {
                          "text": "üîç Verifying: Debit Amount validation\n"
                        },
                        {
                          "text": "Actual: 1000.00 | Expected: 1000.00\n"
                        },
                        {
                          "text": "----------------------------------------------------------------------------------------------------\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-11T20:21:24.931Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "22600f81cd952af39019-41e5d9cbdb52d765cb7d",
              "file": "Tests/FinanceTracker.test.js",
              "line": 155,
              "column": 5
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-11T20:21:23.231Z",
    "duration": 67333.493,
    "expected": 20,
    "skipped": 3,
    "unexpected": 0,
    "flaky": 0
  }
}